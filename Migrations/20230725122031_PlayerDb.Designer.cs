// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Player.Api.Repository;

#nullable disable

namespace Player.Api.Migrations
{
    [DbContext(typeof(PlayerDBContext))]
    [Migration("20230725122031_PlayerDb")]
    partial class PlayerDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Player.Api.Models.Player", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("passwordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("passwordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name = "Patrick",
                            passwordHash = new byte[0],
                            passwordSalt = new byte[0],
                            surname = "Ndimande",
                            username = "Ndimanden"
                        },
                        new
                        {
                            id = 2,
                            name = "Nqobani",
                            passwordHash = new byte[0],
                            passwordSalt = new byte[0],
                            surname = "Ndimande",
                            username = "Ndimanden"
                        });
                });

            modelBuilder.Entity("Player.Api.Models.Transaction", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<double?>("balance")
                        .HasColumnType("float");

                    b.Property<string>("notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("playerId")
                        .HasColumnType("int");

                    b.Property<int>("transactionTypesId")
                        .HasColumnType("int");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Transaction");

                    b.HasData(
                        new
                        {
                            id = 1,
                            balance = 0.0,
                            playerId = 1,
                            transactionTypesId = 2,
                            updatedBy = "Patrick"
                        });
                });

            modelBuilder.Entity("Player.Api.Models.TransactionAuditTrail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<double?>("balance")
                        .HasColumnType("float");

                    b.Property<string>("notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("playerId")
                        .HasColumnType("int");

                    b.Property<int>("transactionTypesId")
                        .HasColumnType("int");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("value")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("TransactionAuditTrail");
                });

            modelBuilder.Entity("Player.Api.Models.TransactionTypes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("transationName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("TransactionTypes");

                    b.HasData(
                        new
                        {
                            id = 1,
                            transationName = "Debit Player"
                        },
                        new
                        {
                            id = 2,
                            transationName = "Credit Player"
                        },
                        new
                        {
                            id = 3,
                            transationName = "Refund Player"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
